<?xml version="1.0" encoding="UTF-8"?>
<test-data
    xmlns="http://pmd.sourceforge.net/rule-tests"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://pmd.sourceforge.net/rule-tests http://pmd.sourceforge.net/rule-tests_1_0_0.xsd">

    <test-code>
        <description>failure case</description>
        <expected-problems>1</expected-problems>
        <expected-linenumbers>4</expected-linenumbers>
        <code><![CDATA[
public class Foo {
    void bar() {
        try {
        } catch (RuntimeException se) {
            throw se;
        }
    }
}
        ]]></code>
    </test-code>

    <test-code>
        <description>doing something else before throwing it, ok</description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
public class Foo {
    void bar() {
        try {
        } catch (RuntimeException se) {
            System.out.println("something interesting");
            throw se;
        }
    }
}
        ]]></code>
    </test-code>

    <test-code>
        <description>throwing the return value of a method call on the exception, ok</description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
public class Foo {
    void bar() {
        try {
        } catch (RuntimeException se) {
            throw se.getCause();
        }
    }
}
        ]]></code>
    </test-code>

    <test-code>
        <description>throwing a different exception, ok</description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
public class Foo {
    void bar() {
        try {
        } catch (RuntimeException se) {
            try {
            } catch (IllegalArgumentException oe) {
                throw se;
            }
        }
    }
}
        ]]></code>
    </test-code>
    
    <test-code>
        <description>#4911 AvoidRethrowingException should allow rethrowing exception subclasses</description>
        <expected-problems>0</expected-problems>
        <code><![CDATA[
import java.nio.file.NoSuchFileException;
import java.io.IOException;

public class Repro {
    void foo() {
        try {
            Files.delete("example.txt");
        } catch (NoSuchFileException e) {
            // Unrecoverable error
            throw e;
        } catch (IOException e) {
            // Potentially recoverable error. Sleep and try again...
        }
    }
}
        ]]></code>
    </test-code>

    <test-code>
        <description>catch followed by an unrelated catch</description>
        <expected-problems>1</expected-problems>
        <expected-linenumbers>7</expected-linenumbers>
        <code><![CDATA[
import java.nio.file.NoSuchFileException;

public class Foo {
    void foo() {
        try {
            Files.delete("example.txt");
        } catch (NoSuchFileException e) {
            throw e;
        } catch (IllegalStateException e) {
        }
    }
}
        ]]></code>
    </test-code>
</test-data>
